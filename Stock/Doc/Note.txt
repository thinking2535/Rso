* 정답은 없으므로 전체 기간동안 의 수익률을 다수 비교하여 가장 높은 것으로 선택하되 각 지표는 약간의 돌연변이 를  줄것.

* 언제 살지 언제 팔지 만 결정하도록 할것.


* 1차 NeuronGroup 으로 개념을 결과로 잡고, 그 개념이 또다시 입력이 되어 Buy, Sell 을 출력으로 하고, Buy, Sell 을 입력으로하고 결과를 출력으로 하는 그룹을 가질것
  -> 차라리 중간중간의 뉴런을 학습시키도록하여 그룹을 별도로 둘 필요 없도록할것.
  -> 아니면 시세판단, 매매, 결과 모두 별개의 그룹으로?


CBrain을 이용해서 장중에 당일끝날때까지의 곡선을 예측하여 상승인지 하락인지만 파악(현재가 기준 상승인지 하락인지)하여 진입?
  !!! 중요 !!! 
	차트의 유사성을 무엇으로 판단할 것인가? 분차트로 데이터를 비교할경우 예를 들면 U자형 차트일 경우 좁고 넓은 두 차트는 완전히 다르다고 판단해 버릴 수 있는데...
	===> 최근 차트는 틱, 오래될수록 오랜기간의 차트로 하여 데이터 수집!!!!!!!!!!!거래량 포함
	===> 또한 과거의 머지된 차트는 캔들차트가 아닌 고저가와 거래량만 가지는 차트로 할것.




아래 노트 정리할것.
추가 전략?
 전고 전저점전략
   0. 고저 클래스 만들것(출력으로 일정절대치 이내이면 진입금지)
   1. 장 시작 후 U자형으로 전 고점 돌파하면 전고점과 현 고점간의 시간차와 고저 창이에 비례하여 추가 상승

 1. 분차트 뉴런으로 확률이 높은 쪽으로 매매?


아래 전략 보다는 어떠한 징후 이후에 짧은 미래에 강한 추세가 있는 경우에
  - 징후 직후 시장가 매수, 매도 진입 후 짧은 미래에 청산 예약 전략으로...

// 아래 ///////////////////////////////////
장 시작 후 상승 추세였다가 하락했다면 다시 상승확률 높음. (반대역시)
장 시작 후 상승후 전 저점 돌파시 급락 (반대 역시)
장 시작 후 상승후 전 저점 돌파하지 못하면 지속 상승(반대역시)
//////////////////////////////////////////////////////////////////////




틱전략에서 일정 시간 이후 청산하는걸로 변경.

					확률 50%를 유념할것.
						거래수가 올라가면 확률이 떨어질 수 있으므로 1일 1회 라던지 정할것?
						청산가격은 장 종료전 목표치에서 점차 수익을 줄이는 방향으로 이동시킬것.



					현재 추세 파악후 해당 추세거스르는 진입하지 말것. ( 중요 )
						1. 전고점, 전저점 돌파 파악.
						2. 일정기간내의 고, 저점으로 추세파악.
						** 산에 접하는 추세선 알고리즘.











* Trader에서는 Remain과 TickData를 1차 순서대로 Pop하고,
  이를 받은 CStockDataOrder? 가 2차 정렬하여 CStockExchange 로 넣을것.

!! 중요
 - Remain 입력 받아서 StockExcange 에 적용
 - StgTickAnalyzer 에 적용하여 돌파 시각 을 반환값으로 처리
 - 그래프 적용
 - InData에 추가

* 다음은 초단타 전략 (클래스 새로 만들것)
	1. 일정 시간(대략 2~3초?)동안 Buy(Sell)회수가 얼마 이상이고 (매 틱 체크할것)
	2. 일정 시간동안 Buy(Sell)수량이 얼마 이상이고
	3. 평균 수량
	4. 0.5초? 이내로 가격 변화가 있을것으로 예측되면(즉, 매도(수)1호가잔량이 얼마후 소진 되면)
	-> 매수진입(매도진입) 진입 성공시 1틱 차이 가격으로 지정가 주문
	 - 취소 후 청산 전략 필요.

	 # 일정시간을 여러개 둘까?
	 # 신호가 떨어지고 얼마나 지났는가 도 InData로 둘것.
* 위 시도후 성과 없으면 Neuron 클래스도 가중치 없는 평균값으로 처리되도록할것?


* Volume 추가
* Remain/건수 처리가능?









































* 어떻하면 Neuron간 바로 연결시킬 수 있나?
	1. 직접 연결 syn을 두고 기존 연결은 그대로 두거나, w가 0이 되면 삭제

* Neuron에 Memory 는 자동으로 호출하는 로직 포함시킬것 ( 즉, In, Out만 넣어주면 자동으로 Remin, Memory 호출 되도록)

* exit전략은?, 예측을 실시간 검증하여 오차율이 높아질때하고, 낮을때하고 진입, 청산 전략 다르게!!?


!!! 진입 신호
4. 10시 이후에는 강한 추세가 드물다
5. 전저가, 전고가 를 돌파하면 추가 하락(상승)


<Index>
* SMA
* 시간(시작부터 지난시간, 종료까지 남은시간, 만료부터지난시간, 만료까지 남은시간??)
* 현재까지 당일 총 거래량?

<Out>
* 짧은 미래를 예측하지 말고 120 주기에 맞는 미래를 예측할것.

<Note>
* 일봉 추세 파악 후 당일의 추세 파악하여 이후 예측할것.
* 진입 청산 연습하여 감 익히고 이를 전략으로 적용하고
* 1차 뉴런의 Out이 2차 뉴런의 In이 되는 구조로 처리해야 적은 학습으로 좋은 결과 얻을 수 있음
  이를 극복하려면 더 오랜 기간 학습하면 되나 트랜드는 바뀌기 때문에
  오랜 기간 학습하는것이 좋지 않다, 그래서 이것이 매우 중요 !!!
* 적중률을 검증하는 시스템을 만들고 결과가 만족스러울 때 거래 시스템 처리!!
  - 예측은 시간과 
* 가장 최근 캔들은 High, Low, Close 를 사용하고, 그 이전 캔들은 High, Low 만 사용
* 장 종료 전 유무(IsEnd)도 InData에 넣어서 익일 갭을 기억하도록 할것.
* 일봉 추세를 예측하여 해당 값을 InData로 사용

<Check>
* SMA 120, 5  모두 120 기간동안의 데이터를 InData에 넣을까?
* SMA 최적 주기 찾을것
  찾은 이후 각 주기의 최근 몇개의 데이터를 각각 주기에 맞는 간격으로 몇개를 neuron의 인풋으로 설정하되, 
* 트레이더 제작 일을 어떻게 진행할까?(작업 시퀀스 만들것)
* 거래량 필요한가?
* 오픈 갭 은 어떻게 학습시키나?
  - InData에 시간을 넣되 1개 변수로 사용할 수 있나?(장종시간 변경된 것으로 인해 과거 학습데이터가 미래에도 유효하도록 처리할것)
* 그래프를 동적으로 진행하며 진입청산을 그래피컬하게 보여지도록 하여 디버깅 용이하도록?
* 예측을 하였으나 예측이 빗나가는 정도에 따라 이후 거래를 할 지 여부를 동적으로 결정할까?
  - 거래 중지 이후에도 학습은 하고, 이후 예측이 다시 맞기 시작하면 거래 시작?
   (단, 거래 중지가 설정되면 바로 청산?)
* Fake 지표 추가할것
* KNN방식의 뉴런이 아닌 시그모이드 뉴런으로 처리 할까?
  - 하나의 작은 인과관계(In, Out)은 하나의 뉴런으로 설정
  - 해당 뉴런은 수동 입력(가능하면 자동)
  - sigmoid로 처리 할 경우 w가 0에 가까우면 뉴련은 의미 없는 인과관계로 판단
    (이것이 가능하려면
	 In이 랜덤이고 Out이 고정이거나,
	 In이 고정인데 Out이 랜덤일 경우
	 w는 0, bias 는 랜덤의 평균이 되어야 함)
* 인과관계가 없는 뉴런은 자동 퇴화 하도록 할까?
  - 한개의 뉴런에서 w하나만 0이 아니고 나머진 0 이라면 해당 w에 해당하는 것만
    별도의 뉴런으로 자동 분리?
  - 두개 이상의 뉴런에서 한개처럼 동작한다면 하나로 자동 병합?

<Todo>
* _CDistance 는 SubData로 옮길것. ( 수정 전 후 분석 값 달라지지 않도록 수정전 분석 결과 기억할것 )
* OutData를 Current 로 대체 가능할듯. ( _IncSubIterator 의 Current 는 SubIterator의 Current 로 대체
* for 문 스레드 사용하도록

<Trader>
1. 최초 비활성화
	Connect상태이고, Chart받았고, Analyze했으면 활성화
2. 클릭시 비활성화
2-1. OpenInterest 로딩 및 Trader에 적용
3. 진행중인 날, 또는 앞으로 진행할 날의 첫 데이터부터 끝까지 MinuteDB로딩
	- 로딩한 데이터 Trde는 하지 않고 진행
4. 읽은 데이터 부터 현재까지 MinData 요청.
	- 요청한 데이터 거래는 하지 않고 진행
5. 실시간 모드 세팅
	- 이후 주기적으로(또는 최적화 하여 최소로) 서버에 데이터 요청,
	- Mintes가 바뀌면 직전데이터를 트레이더에 적용, 거래시작(청산 먼저 할 수 도 있도록)

Make it ok when CTrader is rebooted
